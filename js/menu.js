var mapIDs = {300:"construct",330:"isolation",350:"salvation",360:"snowbound",440:"docks",470:"sidewinder",480:"warehouse",490:"descent",500:"spacecamp",520:"lockout",580:"armory",590:"ghosttown",600:"chillout",720:"midship",730:"sandbox",740:"fortress",410:"bunkerworld",380:"chill",390:"cyberdyne",310:"deadlock",320:"guardian",340:"riverworld",400:"shrine",30:"zanzibar",3005:"005_intro",3010:"010_jungle",3020:"020_base",3030:"030_outskirts",3040:"040_voi",3050:"050_floodvoi",3070:"070_waste",3100:"100_citadel",3110:"110_hc",3120:"120_halo",3130:"130_epilogue",4100:"c100",4200:"c200",5000:"h100",5200:"l200",5300:"l300",6100:"sc100",6110:"sc110",6120:"sc120",6130:"sc130",6140:"sc140",6150:"sc150",703:"s3d_edge",705:"s3d_avalanche",700:"s3d_reactor",31:"s3d_turf"};var gameType = {1:"ctf",2:"slayer",3:"oddball",4:"koth",5:"forge",6:"vip",7:"juggernaut",8:"territories",9:"assault",10:"infection"};var lobbyType = { 0 : "Campaign", 1 : "Matchmaking", 2 : "Multiplayer", 3 : "Forge", 4 : "Theater"};var serverMode = {0 : "Xbox Live (Open Party)", 1 : "Xbox Live (Friends Only)", 2 : "Xbox Live (Invite Only)", 3 : "Online", 4 : "Offline"};var teamArray = [{name: 'red', color: '#620B0B'},{name: 'blue', color: '#0B2362'}];var cardOpacity = 0.9;var networkStatus = {0 : "Xbox Live (Open Party)", 1 : "Xbox Live (Friends Only)", 2 : "Xbox Live (Invite Only)", 3 : "Ready.<br>This party is open for others to join.", 4 : "Ready.<br>This party is local to your PC. To play with others, select Network and the choose Online."};var lobbyDesc = { 0 : "Campaign", 1 : "Matchmaking", 2 : "Take your party to combat and objective-based missions that you select and design. Your rules, your maps, your game.", 3 : "Take your party to collaborate in real time to edit and play variations of your favorite maps, form the subtle to the insane.", 4 : "Theater"};var networkDesc = {0 : "Xbox Live (Open Party)", 1 : "Xbox Live (Friends Only)", 2 : "Xbox Live (Invite Only)", 3 : "Play with others over your local area network, VPN or Online.", 4 : "Play only on this PC."};$(window).load(function(){    dew.on("show", function(){        $("#blackout").hide();        $("#switchLobbyMenu").hide();            $("#switchNetworkMenu").hide();         dew.getSessionInfo().then(function(e){            //console.log(e);            if(e.established){                $("#mainmenu").hide();                $("#lobby").show();                console.log('Host:' + e.isHost);                console.log('Teams:' + e.hasTeams);                dew.getGameVariantInfo().then(function(x){                    //console.log(x);                    console.log('Game Type Name:'+ x.name);                    if(x.name != "Forge"){                        $("#gameMode").show();                        $("#gameMode").text("GAME: "+x.name.toUpperCase());                        $("#title").text("MULTIPLAYER LOBBY");                        $("#startGame").text("START GAME");                    } else {                        $("#gameMode").hide();                        $("#title").text("FORGE LOBBY");                        $("#startGame").text("START FORGE");                    }                    console.log('Game Type:' + gameType[x.mode]);                     $("#varPic").attr("src", "images/gametypes/" + gameType[x.mode] + ".png");                    dew.getMapVariantInfo().then(function(i){                        //console.log(i);                        console.log('Map Name:' + i.name);                        $("#mapChoice").text("MAP: "+i.name.toUpperCase());                        console.log('Map File:' + mapIDs[i.mapId]);                        $("#mapPic").attr("src", "images/maps/" + mapIDs[i.mapId]+ ".png");                        if(x.name == "Forge"){ x.name = "Edit Objects"};                        $("#gameDesc").text(x.name + " on " + i.name);                        dew.command('Server.ListPlayersJSON', {}).then(function(l){                            var playerArray = JSON.parse(l);                            console.log(playerArray);                            $('#playerList').empty();                            for(var i=0; i < playerArray.length; i++){                                var bgColor = playerArray[i].color;                                if(e.hasTeams){                                    bgColor = teamArray[playerArray[i].teamIndex].color;                                }                                $('#playerList').append(                                    $('<li>', {                                        text: playerArray[i].name,                                        css: {                                            backgroundColor: hexToRgb(bgColor,cardOpacity)                                        },                                        id: playerArray[i].name,                                        'data-color': bgColor,                                    }).mouseover(function(){                                        col = $(this).attr('data-color'),                                        bright = adjustColor(col, 30);                                        $(this).css("background-color", hexToRgb(bright, cardOpacity));                                    }).mouseout(function(){                                        col = $(this).attr('data-color');                                        $(this).css("background-color", hexToRgb(col, cardOpacity));                                    })                                )                            }                            console.log('Player count:' + playerArray.length);                            dew.command('Server.Mode', {}).then(function(m){                                console.log('Server Mode:' + serverMode[m]);                                $("#switchNetwork").text("NETWORK: "+serverMode[m].toUpperCase());                                $("#status").html(networkStatus[m]);                                if(e.isHost){                                    var maxPlayers = 2;                                    if(m = 3){                                        dew.command('Server.MaxPlayers', {}).then(function(p){                                            maxPlayers = p;                                        });                                    }                                    console.log('Max Players:' + maxPlayers);                                    $("#playerCount").text(playerArray.length + " Player  (" + maxPlayers + " max)");                                }                                dew.command('Server.LobbyType', {}).then(function(t){                                    console.log('Lobby Type:' + lobbyType[t]);                                });                            });                        });                    });                });            } else {                $("#lobby").hide();                $("#mainmenu").show();            }        });    });        $("#hostMultiplayer").click(function(){        dew.command('Server.LobbyType 2', {}).then(function(response){            dew.show();          });    });       $("#hostForge").click(function(){        dew.command('Server.LobbyType 3', {}).then(function(response){            dew.show();          });      });             $("#switchLobby").click(function(){        $("#blackout").show();        $("#switchLobbyMenu").show();    });    $("#switchNetwork").click(function(){        $("#blackout").show();        $("#switchNetworkMenu").show();    });        $("#blackout").click(function(){        $("#blackout").hide();        $("#switchLobbyMenu").hide();           $("#switchNetworkMenu").hide();    });    $("#multiLobby").mouseover(function(){        $("#lobbyDesc").text(lobbyDesc[2]);    }).click(function(){        dew.command('Server.LobbyType 2', {}).then(function(response){            dew.show();          });        });    $("#forgeLobby").mouseover(function(){        $("#lobbyDesc").text(lobbyDesc[3]);    }).click(function(){        dew.command('Server.LobbyType 3', {}).then(function(response){            dew.show();          });        });        $("#onlineNetwork").mouseover(function(){        $("#networkDesc").text(networkDesc[3]);    }).click(function(){        dew.command('Server.Mode 3', {}).then(function(response){            dew.show();          });        });    $("#offlineNetwork").mouseover(function(){        $("#networkDesc").text(networkDesc[4]);    }).click(function(){        dew.command('Server.Mode 4', {}).then(function(response){            dew.show();          });        });    $("#startGame").click(function(){        dew.command('start', {}).then(function(response){            dew.hide();        });        });        $("#switchTeams").click(function(){        dew.command('Input.UIButtonPress 4', {}).then(function(){            setTimeout(function(){                dew.show();            },1500);        });     });    $(document).keydown(function(e){        if(e.keyCode === 27) { //ESC            dew.command('Input.UIButtonPress 1', {}).then(function(response){                dew.show();            });          }else if (e.keyCode == 192){            dew.show("console");        }    });});function hexToRgb(hex, opacity){    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);    return "rgba(" + parseInt(result[1], 16) + "," + parseInt(result[2], 16) + "," + parseInt(result[3], 16) + "," + opacity + ")";}function adjustColor(color, amount){    var colorhex = (color.split("#")[1]).match(/.{2}/g);    for (var i = 0; i < 3; i++){        var e = parseInt(colorhex[i], 16);        e += amount;        if(amount > 0){            colorhex[i] = ((e > 255) ? 255 : e).toString(16);        }else{            colorhex[i] = ((e < 0) ? 0 : e).toString(16);                   }    }    return "#" + colorhex[0] + colorhex[1] + colorhex[2];}